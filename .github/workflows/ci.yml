name: CI
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths:
      - '**/*.swift'
      - '.github/workflows/*.yml'
  pull_request:
    paths:
      - '**/*.swift'
      - '.github/workflows/*.yml'
jobs:
  test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
        swift-compat-ver:
          - '5'
          - '4.2'
          - '4'
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Use a cache for ".build" directory.
      uses: actions/cache@v1
      with:
        path: .build
        key: build-${{ github.workspace }}-${{ runner.os }}-${{ matrix.swift-compat-ver }}-${{ hashFiles('**/*.swift') }}
        restore-keys: |
          build-${{ github.workspace }}-${{ runner.os }}-${{ matrix.swift-compat-ver }}-
          build-${{ github.workspace }}-${{ runner.os }}-
          build-${{ github.workspace }}-
    - uses: YOCKOW/Action-setup-swift@master
      with:
        swift-version: '5.3.1'
    # DEBUG mode
    - name: Try to build products with debug mode.
      id: debug_build
      run: swift build --configuration debug -Xswiftc -swift-version -Xswiftc ${{ matrix.swift-compat-ver }}
      continue-on-error: true
    - name: Clean debug build directory if necessary
      if: steps.debug_build.outcome == 'failure'
      run: rm -rf $(cd .build/debug && pwd -P)
    - name: Check XCTestManifests.swift
      if: runner.os == 'macOS'
      run: |
        swift test --generate-linuxmain -Xswiftc -swift-version -Xswiftc ${{ matrix.swift-compat-ver }}
        git diff --exit-code
    - name: Test with debug mode.
      run: swift test --configuration debug -Xswiftc -swift-version -Xswiftc ${{ matrix.swift-compat-ver }}
    # RELEASE mode
    - name: Try to build products with release mode.
      id: release_build
      run: swift build --configuration release -Xswiftc -enable-testing -Xswiftc -swift-version -Xswiftc ${{ matrix.swift-compat-ver }}
      continue-on-error: true
    - name: Clean release build directory if necessary
      if: steps.release_build.outcome == 'failure'
      run: rm -rf $(cd .build/release && pwd -P)
    - name: Test with release mode.
      run: swift test --configuration release -Xswiftc -enable-testing -Xswiftc -swift-version -Xswiftc ${{ matrix.swift-compat-ver }}
